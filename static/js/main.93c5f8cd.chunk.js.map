{"version":3,"sources":["components/Theme.jsx","components/NavComponent.jsx","components/FooterComponent.jsx","components/TLDR.jsx","components/ResumeTimeline.jsx","pages/LandingPage.jsx","App.js","pages/ProductPage.jsx","reportWebVitals.js","index.js"],"names":["MainTheme","children","darkMode","useMediaQuery","theme","createTheme","palette","type","ThemeProvider","CssBaseline","useStyles","makeStyles","bar","display","flexDirection","justifyContent","paddingLeft","spacing","paddingRight","Nav","classes","history","useHistory","AppBar","position","className","IconButton","edge","color","onClick","push","root","icon","maxWidth","marginBottom","marginLeft","Footer","BottomNavigation","BottomNavigationAction","TLDR","id","ResumeTimeline","Timeline","resume","length","map","r","i","TimelineItem","TimelineOppositeContent","employer","name","city","state","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Array","isArray","title","forEach","t","startDate","endDate","description","d","console","log","LandingPage","App","header","alignItems","top","deets","deetHeader","subheader","width","backgroundColor","primary","main","padding","marginTop","borderRadius","boxShadow","topMobile","account","useRef","useState","path","exact","render","props","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93c5f8cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nconst MainTheme = ({ children }) => {\r\n  const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  \r\n  const theme = createTheme({\r\n    palette: {\r\n      type: darkMode ? 'dark' : 'light',\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n);\r\n}\r\n\r\nexport default MainTheme;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  // css\r\n  const classes = useStyles();\r\n  // to redirect\r\n  const history = useHistory();\r\n  // redirect handlers\r\n  const handleHomeRedirect = () => history.push('/portfolio');\r\n  return (\r\n    <AppBar position=\"static\" className={classes.bar}>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"home\"\r\n        onClick={handleHomeRedirect}\r\n      >\r\n        <HomeIcon />\r\n      </IconButton>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'start',\r\n  },\r\n  icon: {\r\n    maxWidth: theme.spacing(5),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(-1),\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleHomeRedirect = () => history?.push('/portfolio');\r\n  return (\r\n    <BottomNavigation className={classes.root}>\r\n      <BottomNavigationAction\r\n        icon={<HomeIcon />}\r\n        className={classes.icon}\r\n        onClick={handleHomeRedirect}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n/**\r\n * TLDR Component. Basically the About Me portion of portfolio\r\n * @returns {Component}\r\n */\r\nconst TLDR = () => {\r\n  return (\r\n    <div id=\"tldr\">\r\n      <code>\r\n        TLDR: not your average tech enthusiast\r\n      </code>\r\n      {/* TODO: more thorough about me stuff after the tldr */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TLDR;\r\n","import React from 'react';\r\n// MUI\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n// Custom\r\nimport resume from '../resume.json';\r\nimport { TimelineOppositeContent } from '@material-ui/lab';\r\n/**\r\n * Display Resume Work Experience In Timeline\r\n * @returns {Component}\r\n */\r\nconst ResumeTimeline = () => {\r\n  return (\r\n    <Timeline>\r\n      {resume.resume?.length > 0\r\n        ? resume.resume?.map((r, i) => (\r\n          <TimelineItem key={i}>\r\n            <TimelineOppositeContent>\r\n              {r.employer.name}\r\n              <br />\r\n              {`${r.employer.city}, ${r.employer.state}`}\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              {Array.isArray(r.title)\r\n                ? (\r\n                  r.title.forEach((t) => (\r\n                    <div>\r\n                      {/* {console.log('t', t)}\r\n                      {console.log('r', r)} */}\r\n                      {t}\r\n                      <br />\r\n                      {r.startDate[t]} - {r.endDate[t]}\r\n                      <br />\r\n                      <div>\r\n                        {/* {console.log('r.des[t]', r.description[t])} */}\r\n                        {r.description[t].forEach((d) => (\r\n                          <div>{`- ${d}`}</div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div>\r\n                    {r.title}\r\n                    <br />\r\n                    {r.startDate} - {r.endDate}\r\n                    <br />\r\n                    <div>\r\n                      {/* {console.log('r.des', r.description)} */}\r\n                      {r.description.forEach((d) => (\r\n                        <div>{console.log('deez', d)}{`- ${d}`}</div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))\r\n        : null}\r\n    </Timeline>\r\n  )\r\n};\r\n\r\nexport default ResumeTimeline;\r\n","import React, { useState } from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\n// Custom\r\nimport TLDR from '../components/TLDR';\r\nimport ResumeTimeline from '../components/ResumeTimeline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <TLDR />\r\n      <ResumeTimeline />\r\n    </div>\r\n  );\r\n}\r\nexport default LandingPage;\r\n","import React, { useRef, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport * as reach from '@reach-sh/stdlib/ALGO';\n\nimport './App.css';\nimport MainTheme from './components/Theme';\nimport Nav from './components/NavComponent';\nimport Footer from './components/FooterComponent';\nimport LandingPage from './pages/LandingPage';\nimport ProductPage from './pages/ProductPage';\nimport ProfilePage from './pages/ProfilePage';\nimport AccountPage from './pages/AccountPage';\n\nconst App = () => {\n  \n  const account = useRef();\n  const balance = useRef();\n  const fundAmount = useRef();\n  const [refresh, setRefresh] = useState(false);\n  // helpers\n  /**\n   * Fund Wallet With TestNet Algo\n   * @async\n   * @fires setRefresh\n   */\n   const fundWallet = async () => {\n    setRefresh(true);\n    const faucet = await reach.getFaucet();\n    await reach.transfer(\n      faucet,\n      account.current,\n      reach.parseCurrency(fundAmount.current),\n    );\n    await getBalance();\n    setRefresh(false);\n  }\n  /**\n   * Get Account\n   * @async\n   * @returns {Promise} set current account to result of reach.getDefaultAccount()\n   */\n  const getAccount = async () => account.current = await reach.getDefaultAccount();\n  const getBalance = async () => {\n    /**\n     * balanceOf returns in microalgos\n     */\n    const rawBalance = await reach.balanceOf(account.current);\n    /**\n     * format microalgos to Algos & assign to current balance\n     */\n    balance.current = reach.formatCurrency(rawBalance, 4);\n  }\n  /**\n   * Connect to Wallet\n   * @async\n   * @fires getAccount\n   * @fires getBalance\n   * @fires setRefresh\n   */\n  const connectWallet = async () => {\n    await getAccount();\n    setRefresh(true);\n    await getBalance();\n    setRefresh(false);\n  }\n\n  return (\n    <MainTheme>\n      <Router>\n        <Nav />\n        <div className=\"App container-fluid\">\n          <Switch>\n            <Route\n              path=\"/portfolio\"\n              exact\n              render={(props) => (\n                <LandingPage\n                  {...props}\n                  user={account}\n                />\n              )}\n            />\n          </Switch>      \n        </div>\n        <Footer />\n      </Router>\n    </MainTheme>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI Core\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n// Lab\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// Utils\r\nimport displayAddress from '../utilities/displayAddress';\r\nimport { capitalize } from '../utilities/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    '& button.MuiIconButton-root': {\r\n      paddingLeft: theme.spacing(0),\r\n    },\r\n  },\r\n  top: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  deets: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  deetHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'baseline',\r\n  },\r\n  subheader: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(4),\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: '0px 2px 6px #FFF',\r\n  },\r\n  topMobile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst ProductPage = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [expandTL, setExpandTL] = useState('');\r\n  const propInfo = history?.location?.state?.activeProperty;\r\n  /**\r\n   * Mobile? maxWidth: 415px\r\n   * @type {boolean} - is the current viewpoint mobile?\r\n   */\r\n  const mobile = useMediaQuery('(max-width:415px)');\r\n  /**\r\n   * Handle Expanding Timeline Accordions\r\n   * @param {int} panel panel index\r\n   * @fires setExpandTL to new panel or close\r\n   */\r\n  const handleExpandTL = (panel) => (e, newE) => setExpandTL(newE ? panel : false);\r\n  // console.log('prop info', propInfo);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"h2\" style={{ margin: 'auto' }}>\r\n          {displayAddress(history?.location?.state?.activeProperty?.propertyInfo?.address)}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={\r\n          mobile ? classes.mobileTop : classes.top\r\n        }>\r\n          <div className={classes.imgs}>\r\n            {/* TODO: img file paths: meh good enough for now */}\r\n            {propInfo?.images ? (\r\n              <>\r\n                <img\r\n                  src={`${process.env.REACT_APP_URL_BASE}/${propInfo?.images?.[0]?.path}`}\r\n                  alt={`${displayAddress(\r\n                    propInfo?.propertyInfo.address\r\n                  )}-pics`}\r\n                />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.deets}>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Property Info</b>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'primary' : 'secondary'\r\n                      }\r\n                      label={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'Occupied' : 'Vacant'}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Occupancy</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.vacant}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bath</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bath}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bedroom(s)</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bedrooms}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Type</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.propertyType}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Sqft</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.sqft}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Year Built</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.yearBuilt}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div className={classes.numbers}>\r\n          <h4 className={classes.subheader}>Quick Numbers</h4>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell noWrap>\r\n                  <b>Token Info</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={propInfo?.status}\r\n                    color={propInfo?.status !== 'sold out'\r\n                      ? 'primary' : 'secondary'}\r\n                  />\r\n                </TableCell>\r\n                <TableCell colSpan={2}>\r\n                  <b>Investment Info</b>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Sold\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total Investment\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.investmentInfo.totalInvestment}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Available\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalAvailable\r\n                    - propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  $ / Token\r\n                </TableCell>\r\n                <TableCell>\r\n                  {`$${+(propInfo.investmentInfo.totalInvestment\r\n                    / propInfo.investmentInfo.totalTokens).toFixed(2)}`}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>Project Timeline</h4>\r\n          <Timeline>\r\n            {Array.isArray(propInfo?.projectTimeline) ? (\r\n              propInfo.projectTimeline?.sort((a, b) => \r\n                new Date(a.date) < new Date(b.date)\r\n              )?.map((tl, i) => (\r\n                <TimelineItem>\r\n                  <TimelineOppositeContent style={{ marginTop: '12px' }}>\r\n                    {tl?.date}\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator style={{ marginTop: '12px' }}>\r\n                    <TimelineDot\r\n                      color={i === 0\r\n                        ? 'secondary' : 'primary'}\r\n                    />\r\n                    {i !== propInfo.projectTimeline.length - 1\r\n                      ? <TimelineConnector /> : null}\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>\r\n                    <Accordion\r\n                      square\r\n                      expanded={expandTL === i}\r\n                      onChange={handleExpandTL(i)}\r\n                    >\r\n                      <AccordionSummary>\r\n                        <b>{tl?.title}</b>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {tl?.description}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))\r\n            ) : null}\r\n          </Timeline>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>More Numbers</h4>\r\n          <Table size=\"small\">\r\n            {propInfo?.financialInfo ? (\r\n              Object.keys(propInfo.financialInfo).map((f, i) => (\r\n                <TableRow>\r\n                  {i % 2 === 0 ? (\r\n                    <>\r\n                      <TableCell>\r\n                        {capitalize(Object.keys(propInfo.financialInfo)[i + 1])}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[Object.keys(propInfo.financialInfo)[i + 1]]}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {capitalize(f)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[f]}\r\n                      </TableCell>\r\n                    </>\r\n                  ) : null}\r\n                </TableRow>\r\n              ))\r\n            ) : null}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}