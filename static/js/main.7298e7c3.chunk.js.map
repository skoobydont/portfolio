{"version":3,"sources":["components/Theme.jsx","components/NavComponent.jsx","components/FooterComponent.jsx","components/TLDR.jsx","components/ResumeTimeline.jsx","pages/LandingPage.jsx","App.js","pages/ProductPage.jsx","reportWebVitals.js","index.js"],"names":["MainTheme","children","darkMode","useMediaQuery","theme","createTheme","palette","type","ThemeProvider","CssBaseline","useStyles","makeStyles","bar","display","flexDirection","justifyContent","paddingLeft","spacing","paddingRight","Nav","classes","history","useHistory","AppBar","position","className","IconButton","edge","color","onClick","push","root","icon","maxWidth","marginLeft","Footer","handleOpenTab","link","window","open","focus","BottomNavigation","BottomNavigationAction","Tooltip","title","process","TLDR","id","mobileRow","margin","marginTop","desktopRow","width","rowAction","padding","mobileRowAction","empName","textAlign","doubleTitle","rowDescription","doubleDescription","descriptionList","ResumeTimeline","props","mobile","handleClose","useState","expanded","setExpanded","formatDate","date","theDate","Date","toDateString","split","ResumeRow","entry","index","arrayTitle","Array","isArray","Accordion","component","Card","employer","name","AccordionSummary","Typography","variant","city","state","map","t","i","indexOf","startDate","endDate","AccordionDetails","description","d","resume","length","r","accordion","backgroundColor","background","default","workExp","alignItems","workExpTitle","resumeList","LandingPage","resumeExpand","setResumeExpand","handleResumeExpand","App","header","top","deets","deetHeader","subheader","primary","main","borderRadius","boxShadow","topMobile","account","useRef","path","exact","render","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7298e7c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nconst MainTheme = ({ children }) => {\r\n  const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  \r\n  const theme = createTheme({\r\n    palette: {\r\n      type: darkMode ? 'dark' : 'light',\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n);\r\n}\r\n\r\nexport default MainTheme;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  // css\r\n  const classes = useStyles();\r\n  // to redirect\r\n  const history = useHistory();\r\n  // redirect handlers\r\n  const handleHomeRedirect = () => history.push('/portfolio');\r\n  return (\r\n    <AppBar position=\"static\" className={classes.bar}>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"home\"\r\n        onClick={handleHomeRedirect}\r\n      >\r\n        <HomeIcon />\r\n      </IconButton>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    maxWidth: theme.spacing(5),\r\n    // marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(-1),\r\n    '& :hover': {\r\n      color: \"#FFF\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Handle Home Redirect\r\n   * @returns {Function} push users back to home url\r\n   */\r\n  const handleHomeRedirect = () => history?.push(process.env.REACT_APP_HOME_URL);\r\n  /**\r\n   * Handle Opening Link in New Tab\r\n   * @param {String} link the url you want to be opened in a new tab\r\n   * @returns {null}\r\n   */\r\n  const handleOpenTab = (link) => {\r\n    const win = window.open(link, \"_blank\");\r\n    win.focus();\r\n    return null;\r\n  }\r\n  return (\r\n    <BottomNavigation className={classes.root}>\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"Home\">\r\n            <HomeIcon />\r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={handleHomeRedirect}\r\n      />\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"LinkedIn\">\r\n            <LinkedInIcon />          \r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={() => handleOpenTab(process.env.REACT_APP_LINKED_IN_URL)}\r\n      />\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"GitHub\">\r\n            <GitHubIcon />\r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={() => handleOpenTab(process.env.REACT_APP_GITHUB_URL)}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n/**\r\n * TLDR Component. Basically the About Me portion of portfolio\r\n * @returns {Component}\r\n */\r\nconst TLDR = () => {\r\n  return (\r\n    <div id=\"tldr\">\r\n      <code>\r\n        TLDR: not your average tech enthusiast\r\n      </code>\r\n      {/* TODO: more thorough about me stuff after the tldr */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TLDR;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Custom\r\nimport resume from '../resume.json';\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mobileRow: {\r\n    margin: theme.spacing(1),\r\n    marginTop: '0px',\r\n  },\r\n  desktopRow: {\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    width: theme.spacing(75),\r\n  },\r\n  rowAction: {\r\n    padding: theme.spacing(1),\r\n    '& .MuiAccordionSummary-content': {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n    },\r\n    '& .MuiAccordionSummary-content.Mui-expanded': {\r\n      /* this is so the title text doesnt inherit\r\n        unwanted margin when expanded */\r\n      margin: '12px 0px',\r\n    },\r\n  },\r\n  mobileRowAction: {\r\n    '& .MuiAccordionSummary-content': {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  empName: {\r\n    textAlign: 'start',\r\n  },\r\n  title: {\r\n    textAlign: 'end',\r\n  },\r\n  doubleTitle: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  rowDescription: {\r\n    flexDirection: 'column',\r\n  },\r\n  doubleDescription: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'start',\r\n  },\r\n  descriptionList: {\r\n    marginTop: '0px',\r\n  },\r\n}));\r\n/**\r\n * Display Resume Work Experience In Timeline\r\n * @returns {Component}\r\n */\r\nconst ResumeTimeline = (props) => {\r\n  const classes = useStyles();\r\n  const mobile = useMediaQuery('(max-width:600px)');\r\n  const { handleClose } = props;\r\n  const [expanded, setExpanded] = useState(null);\r\n  /**\r\n   * Format Date\r\n   * @param {String | null} date the date to format\r\n   * @returns {String} Month & Year | Present if current\r\n   */\r\n  const formatDate = (date) => {\r\n    if (date !== null) {\r\n      const theDate = new Date(date).toDateString().split(' ');\r\n      return `${theDate[1]} ${theDate[3]}`\r\n    } else {\r\n      // if end date null, still there\r\n      return 'Present';\r\n    }\r\n  }\r\n  /**\r\n   * Handle Accordion Change\r\n   * @param {String} title which accordion to expand (null if same as expanded)\r\n   * @fires setExpanded\r\n   */\r\n  const handleAccordionChange = (title) => {\r\n    if (expanded !== title) {\r\n      setExpanded(title);\r\n    } else {\r\n      setExpanded(null);\r\n    }\r\n  }\r\n  /**\r\n   * Resume Row\r\n   * @param {Object} entry the resume entry to display within accordion \r\n   * @returns {Component} Resume Row Component\r\n   */\r\n  const ResumeRow = ({ entry, index }) => {\r\n    const arrayTitle = Array.isArray(entry.title);\r\n    return (\r\n      <div className={mobile\r\n        ? classes.mobileRow\r\n        : classes.desktopRow}\r\n      >\r\n        <Accordion\r\n          component={Card}\r\n          expanded={expanded === entry.employer.name}\r\n          onClick={() => handleAccordionChange(entry.employer.name)}\r\n        >\r\n          <AccordionSummary\r\n            className={`${\r\n              mobile ? classes.mobileRowAction : ''\r\n            } ${classes.rowAction}`}\r\n          >\r\n            <div className={classes.empName}>\r\n              <Typography>{entry.employer.name}</Typography>\r\n              <Typography variant=\"body2\">\r\n                <i>\r\n                  {entry.employer.city}\r\n                  , {entry.employer.state}\r\n                </i>\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.title}>\r\n              {arrayTitle\r\n                ? entry.title?.map((t, i) => (\r\n                  <div\r\n                    className={i % 2 !== 0 ? classes.doubleTitle : ''}\r\n                    key={i}\r\n                  >\r\n                    {t.indexOf('/') > -1\r\n                      ? (\r\n                        <>\r\n                          <Typography>{t?.split('/')[0]} /</Typography>\r\n                          <Typography>{t?.split('/')[1]}</Typography>\r\n                        </>\r\n                      )\r\n                      : <Typography>{t}</Typography>\r\n                    }\r\n                    <Typography variant=\"body2\">\r\n                      <i>\r\n                        {`${formatDate(entry.startDate[t])}\r\n                        - ${formatDate(entry.endDate[t])}`}\r\n                      </i>\r\n                    </Typography>\r\n                  </div>\r\n                ))\r\n                : (\r\n                  <>\r\n                    <Typography>{entry.title}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <i>\r\n                        {`${formatDate(entry.startDate)}\r\n                        - ${formatDate(entry.endDate)}`}\r\n                      </i>\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </AccordionSummary>\r\n          <AccordionDetails className={classes.rowDescription}>\r\n            {arrayTitle\r\n              ? entry.title?.map((t, i) => (\r\n                <div className={classes.doubleDescription} key={i}>\r\n                  <Typography>{t}</Typography>\r\n                  <ul className={classes.descriptionList}>\r\n                    {entry.description[t]?.map((d) => (\r\n                      <li>{d}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))\r\n              : (\r\n                <div className={classes.doubleDescription}>\r\n                  <ul className={classes.descriptionList}>\r\n                    {entry.description?.map((d) => (\r\n                      <li>{d}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        {index === resume.resume.length - 1\r\n          ? (\r\n            <IconButton onClick={() => handleClose()}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          )\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    resume.resume?.length > 0\r\n      ? resume.resume?.map((r, i) => (\r\n          <ResumeRow\r\n            entry={r}\r\n            key={i}\r\n            index={i}\r\n          />\r\n        ))\r\n      : null\r\n  );\r\n};\r\n\r\nResumeTimeline.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ResumeTimeline;\r\n","import React, { useState } from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n// Icons\r\nimport DocumentIcon from '@material-ui/icons/Description';\r\n// Custom\r\nimport TLDR from '../components/TLDR';\r\nimport ResumeTimeline from '../components/ResumeTimeline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  accordion: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  workExp: {\r\n    '& .MuiAccordionSummary-content': {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    '& .MuiAccordionSummary-content.Mui-expanded': {\r\n      /* this is so the title text doesnt inherit\r\n        unwanted margin when expanded */\r\n      margin: '12px 0px',\r\n    },\r\n  },\r\n  workExpTitle: {\r\n    marginLeft: theme.spacing(1),\r\n    padding: '0px',\r\n  },\r\n  resumeList: {\r\n    flexDirection: 'column',\r\n    padding: '0px',\r\n  },\r\n}));\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n  const [resumeExpand, setResumeExpand] = useState(false);\r\n  const handleResumeExpand = () => setResumeExpand(!resumeExpand);\r\n  return (\r\n    <div className={classes.root}>\r\n      <TLDR />\r\n      <Accordion\r\n        component={Card}\r\n        expanded={resumeExpand}\r\n        className={classes.accordion}\r\n      >\r\n        <AccordionSummary\r\n          onClick={() => handleResumeExpand()}\r\n          className={classes.workExp}\r\n        >\r\n          <DocumentIcon />\r\n          <Typography className={classes.workExpTitle}>Work Experience</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.resumeList}>\r\n          <ResumeTimeline\r\n            handleClose={handleResumeExpand}\r\n          />          \r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\nexport default LandingPage;\r\n","import React, { useRef, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport * as reach from '@reach-sh/stdlib/ALGO';\n\nimport './App.css';\nimport MainTheme from './components/Theme';\nimport Nav from './components/NavComponent';\nimport Footer from './components/FooterComponent';\nimport LandingPage from './pages/LandingPage';\nimport ProductPage from './pages/ProductPage';\nimport ProfilePage from './pages/ProfilePage';\nimport AccountPage from './pages/AccountPage';\n\nconst App = () => {\n  \n  const account = useRef();\n  const balance = useRef();\n  const fundAmount = useRef();\n  const [refresh, setRefresh] = useState(false);\n  // helpers\n  /**\n   * Fund Wallet With TestNet Algo\n   * @async\n   * @fires setRefresh\n   */\n   const fundWallet = async () => {\n    setRefresh(true);\n    const faucet = await reach.getFaucet();\n    await reach.transfer(\n      faucet,\n      account.current,\n      reach.parseCurrency(fundAmount.current),\n    );\n    await getBalance();\n    setRefresh(false);\n  }\n  /**\n   * Get Account\n   * @async\n   * @returns {Promise} set current account to result of reach.getDefaultAccount()\n   */\n  const getAccount = async () => account.current = await reach.getDefaultAccount();\n  const getBalance = async () => {\n    /**\n     * balanceOf returns in microalgos\n     */\n    const rawBalance = await reach.balanceOf(account.current);\n    /**\n     * format microalgos to Algos & assign to current balance\n     */\n    balance.current = reach.formatCurrency(rawBalance, 4);\n  }\n  /**\n   * Connect to Wallet\n   * @async\n   * @fires getAccount\n   * @fires getBalance\n   * @fires setRefresh\n   */\n  const connectWallet = async () => {\n    await getAccount();\n    setRefresh(true);\n    await getBalance();\n    setRefresh(false);\n  }\n\n  return (\n    <MainTheme>\n      <Router>\n        <Nav />\n        <div className=\"App container-fluid\">\n          <Switch>\n            <Route\n              path=\"/portfolio\"\n              exact\n              render={(props) => (\n                <LandingPage\n                  {...props}\n                  user={account}\n                />\n              )}\n            />\n          </Switch>      \n        </div>\n        <Footer />\n      </Router>\n    </MainTheme>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI Core\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n// Lab\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// Utils\r\nimport displayAddress from '../utilities/displayAddress';\r\nimport { capitalize } from '../utilities/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    '& button.MuiIconButton-root': {\r\n      paddingLeft: theme.spacing(0),\r\n    },\r\n  },\r\n  top: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  deets: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  deetHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'baseline',\r\n  },\r\n  subheader: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(4),\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: '0px 2px 6px #FFF',\r\n  },\r\n  topMobile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst ProductPage = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [expandTL, setExpandTL] = useState('');\r\n  const propInfo = history?.location?.state?.activeProperty;\r\n  /**\r\n   * Mobile? maxWidth: 415px\r\n   * @type {boolean} - is the current viewpoint mobile?\r\n   */\r\n  const mobile = useMediaQuery('(max-width:415px)');\r\n  /**\r\n   * Handle Expanding Timeline Accordions\r\n   * @param {int} panel panel index\r\n   * @fires setExpandTL to new panel or close\r\n   */\r\n  const handleExpandTL = (panel) => (e, newE) => setExpandTL(newE ? panel : false);\r\n  // console.log('prop info', propInfo);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"h2\" style={{ margin: 'auto' }}>\r\n          {displayAddress(history?.location?.state?.activeProperty?.propertyInfo?.address)}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={\r\n          mobile ? classes.mobileTop : classes.top\r\n        }>\r\n          <div className={classes.imgs}>\r\n            {/* TODO: img file paths: meh good enough for now */}\r\n            {propInfo?.images ? (\r\n              <>\r\n                <img\r\n                  src={`${process.env.REACT_APP_URL_BASE}/${propInfo?.images?.[0]?.path}`}\r\n                  alt={`${displayAddress(\r\n                    propInfo?.propertyInfo.address\r\n                  )}-pics`}\r\n                />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.deets}>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Property Info</b>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'primary' : 'secondary'\r\n                      }\r\n                      label={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'Occupied' : 'Vacant'}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Occupancy</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.vacant}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bath</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bath}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bedroom(s)</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bedrooms}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Type</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.propertyType}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Sqft</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.sqft}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Year Built</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.yearBuilt}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div className={classes.numbers}>\r\n          <h4 className={classes.subheader}>Quick Numbers</h4>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell noWrap>\r\n                  <b>Token Info</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={propInfo?.status}\r\n                    color={propInfo?.status !== 'sold out'\r\n                      ? 'primary' : 'secondary'}\r\n                  />\r\n                </TableCell>\r\n                <TableCell colSpan={2}>\r\n                  <b>Investment Info</b>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Sold\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total Investment\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.investmentInfo.totalInvestment}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Available\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalAvailable\r\n                    - propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  $ / Token\r\n                </TableCell>\r\n                <TableCell>\r\n                  {`$${+(propInfo.investmentInfo.totalInvestment\r\n                    / propInfo.investmentInfo.totalTokens).toFixed(2)}`}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>Project Timeline</h4>\r\n          <Timeline>\r\n            {Array.isArray(propInfo?.projectTimeline) ? (\r\n              propInfo.projectTimeline?.sort((a, b) => \r\n                new Date(a.date) < new Date(b.date)\r\n              )?.map((tl, i) => (\r\n                <TimelineItem>\r\n                  <TimelineOppositeContent style={{ marginTop: '12px' }}>\r\n                    {tl?.date}\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator style={{ marginTop: '12px' }}>\r\n                    <TimelineDot\r\n                      color={i === 0\r\n                        ? 'secondary' : 'primary'}\r\n                    />\r\n                    {i !== propInfo.projectTimeline.length - 1\r\n                      ? <TimelineConnector /> : null}\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>\r\n                    <Accordion\r\n                      square\r\n                      expanded={expandTL === i}\r\n                      onChange={handleExpandTL(i)}\r\n                    >\r\n                      <AccordionSummary>\r\n                        <b>{tl?.title}</b>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {tl?.description}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))\r\n            ) : null}\r\n          </Timeline>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>More Numbers</h4>\r\n          <Table size=\"small\">\r\n            {propInfo?.financialInfo ? (\r\n              Object.keys(propInfo.financialInfo).map((f, i) => (\r\n                <TableRow>\r\n                  {i % 2 === 0 ? (\r\n                    <>\r\n                      <TableCell>\r\n                        {capitalize(Object.keys(propInfo.financialInfo)[i + 1])}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[Object.keys(propInfo.financialInfo)[i + 1]]}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {capitalize(f)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[f]}\r\n                      </TableCell>\r\n                    </>\r\n                  ) : null}\r\n                </TableRow>\r\n              ))\r\n            ) : null}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}