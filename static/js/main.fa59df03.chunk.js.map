{"version":3,"sources":["components/Theme.jsx","components/NavComponent.jsx","components/FooterComponent.jsx","pages/LandingPage.jsx","pages/SoftwareExperiencePage.jsx","pages/HardwareExperiencePage.jsx","pages/OtherProjectsPage.jsx","App.js","pages/ProductPage.jsx","reportWebVitals.js","index.js"],"names":["MainTheme","children","darkMode","useMediaQuery","theme","createTheme","palette","type","ThemeProvider","CssBaseline","useStyles","makeStyles","bar","display","flexDirection","justifyContent","paddingLeft","spacing","paddingRight","text","textTransform","color","Nav","classes","history","useHistory","AppBar","position","className","Button","variant","onClick","push","process","root","icon","maxWidth","paddingBottom","marginLeft","Footer","handleOpenTab","link","window","open","focus","BottomNavigation","BottomNavigationAction","Tooltip","title","id","paddingTop","alignItems","buttonRow","button","marginRight","LandingPage","useState","undefined","location","state","software","hardware","other","experienceExpand","setExperienceExpand","handleExperienceExpand","exp","val","Collapse","in","timeout","unmountOnExit","collapse","CardContent","Typography","CardActions","size","padding","header","SoftwareExperiencePage","pathname","HardwareExperiencePage","OtherProjectsPage","App","top","deets","deetHeader","subheader","width","backgroundColor","primary","main","marginTop","borderRadius","boxShadow","topMobile","path","exact","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa59df03.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nconst MainTheme = ({ children }) => {\r\n  const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  \r\n  const theme = createTheme({\r\n    palette: {\r\n      type: darkMode ? 'dark' : 'light',\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n);\r\n}\r\n\r\nexport default MainTheme;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  text: {\r\n    textTransform: 'none',\r\n    '& span.MuiButton-label': {\r\n      color: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  // css\r\n  const classes = useStyles();\r\n  // to redirect\r\n  const history = useHistory();\r\n  // redirect handlers\r\n  const handleHomeRedirect = () => history.push(process.env.REACT_APP_HOME_URL);\r\n  return (\r\n    <AppBar position=\"static\" className={classes.bar}>\r\n      <Button\r\n        variant=\"text\"\r\n        onClick={handleHomeRedirect}\r\n        className={classes.text}\r\n      >\r\n        Skubak.AJ\r\n      </Button>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    maxWidth: theme.spacing(5),\r\n    paddingBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(-1),\r\n    '& :hover': {\r\n      color: \"#FFF\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Handle Home Redirect\r\n   * @returns {Function} push users back to home url\r\n   */\r\n  const handleHomeRedirect = () => history?.push(process.env.REACT_APP_HOME_URL);\r\n  /**\r\n   * Handle Opening Link in New Tab\r\n   * @param {String} link the url you want to be opened in a new tab\r\n   * @returns {null}\r\n   */\r\n  const handleOpenTab = (link) => {\r\n    const win = window.open(link, \"_blank\");\r\n    win.focus();\r\n    return null;\r\n  }\r\n  return (\r\n    <BottomNavigation className={classes.root}>\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"Home\">\r\n            <HomeIcon />\r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={handleHomeRedirect}\r\n        id=\"Home\"\r\n      />\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"LinkedIn\">\r\n            <LinkedInIcon />          \r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={() => handleOpenTab(process.env.REACT_APP_LINKED_IN_URL)}\r\n        id=\"LinkedIn\"\r\n      />\r\n      <BottomNavigationAction\r\n        icon={(\r\n          <Tooltip title=\"GitHub\">\r\n            <GitHubIcon />\r\n          </Tooltip>\r\n        )}\r\n        className={classes.icon}\r\n        onClick={() => handleOpenTab(process.env.REACT_APP_GITHUB_URL)}\r\n        id=\"GitHub\"\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n// Custom\r\nimport TLDR from '../components/TLDR';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    alignItems: 'center',\r\n  },\r\n  buttonRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    maxWidth: theme.spacing(15),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  // Object of Collapse State\r\n  const [experienceExpand, setExperienceExpand] = useState(\r\n    history?.location?.state !== undefined\r\n    // use history location state if exists\r\n      ? history.location.state\r\n      : {\r\n        software: false,\r\n        hardware: false,\r\n        other: false,\r\n      });\r\n  /**\r\n   * Handle Experience Expand\r\n   * @fires setExperienceExpand\r\n   * @param {String} exp experience collapse to modify\r\n   * @param {Boolean} val open or nah\r\n   */\r\n  const handleExperienceExpand = (exp, val) => {\r\n    setExperienceExpand({\r\n      ...experienceExpand,\r\n      [exp]: val,\r\n    });\r\n  };\r\n  const handleSoftwarePageClick = () => history.push(`${process.env.REACT_APP_HOME_URL}/software`);\r\n  const handleHardwarePageClick = () => history.push(`${process.env.REACT_APP_HOME_URL}/hardware`);\r\n  const handleOtherPageClick = () => history.push(`${process.env.REACT_APP_HOME_URL}/other`);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.buttonRow}>\r\n        <Button\r\n          onClick={() => handleExperienceExpand('software', !experienceExpand.software)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n        >\r\n          Software\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleExperienceExpand('hardware', !experienceExpand.hardware)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n        >\r\n          Hardware\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleExperienceExpand('other', !experienceExpand.other)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n        >\r\n          Other\r\n        </Button>\r\n      </div>\r\n      {/* <TLDR /> */}\r\n      <Collapse\r\n        in={experienceExpand?.software}\r\n        timeout=\"auto\"\r\n        unmountOnExit\r\n        className={classes.collapse}\r\n      >\r\n        <CardContent>\r\n          <Typography>\r\n            Software\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={handleSoftwarePageClick}\r\n          >\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Collapse>\r\n      <Collapse\r\n        in={experienceExpand?.hardware}\r\n        timeout=\"auto\"\r\n        unmountOnExit\r\n        className={classes.collapse}\r\n      >\r\n        <CardContent>\r\n          <Typography>\r\n            Hardware\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={handleHardwarePageClick}\r\n          >\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Collapse>\r\n      <Collapse\r\n        in={experienceExpand?.other}\r\n        timeout=\"auto\"\r\n        unmountOnExit\r\n        className={classes.collapse}\r\n      >\r\n        <CardContent>\r\n          <Typography>\r\n            Other Fun Projects\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={handleOtherPageClick}\r\n          >\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SoftwareExperiencePage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Handle Go Back to /porfolio\r\n   * @fires history.push\r\n   * @returns {null}\r\n   */\r\n  const handleGoBack = () => {\r\n    history.push({\r\n      pathname: '/portfolio',\r\n      state: {\r\n        ...history.location.state,\r\n        software: true,\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Button\r\n          onClick={() => handleGoBack()}\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          &#60;\r\n        </Button>\r\n        <Typography>\r\n          Learn More About Software Experience on this page\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoftwareExperiencePage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HardwareExperiencePage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Handle Go Back to /porfolio\r\n   * @fires history.push\r\n   * @returns {null}\r\n   */\r\n  const handleGoBack = () => {\r\n    history.push({\r\n      pathname: '/portfolio',\r\n      state: {\r\n        ...history.location.state,\r\n        hardware: true,\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Button\r\n          onClick={() => handleGoBack()}\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          &#60;\r\n        </Button>\r\n        <Typography>\r\n          Learn More About Hardware Experience on this page        \r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HardwareExperiencePage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OtherProjectsPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Handle Go Back to /porfolio\r\n   * @fires history.push\r\n   * @returns {null}\r\n   */\r\n  const handleGoBack = () => {\r\n    history.push({\r\n      pathname: '/portfolio',\r\n      state: {\r\n        ...history.location.state,\r\n        other: true,\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Button\r\n          onClick={() => handleGoBack()}\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          &#60;\r\n        </Button>\r\n        <Typography>\r\n          Learn More About Other Fun Projects on this page\r\n        </Typography>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherProjectsPage;\r\n","import React, { useRef, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport './App.css';\nimport MainTheme from './components/Theme';\nimport Nav from './components/NavComponent';\nimport Footer from './components/FooterComponent';\nimport LandingPage from './pages/LandingPage';\nimport SoftwareExperiencePage from './pages/SoftwareExperiencePage';\nimport HardwareExperiencePage from './pages/HardwareExperiencePage';\nimport OtherProjectsPage from './pages/OtherProjectsPage';\nimport ProductPage from './pages/ProductPage';\nimport ProfilePage from './pages/ProfilePage';\nimport AccountPage from './pages/AccountPage';\n\nconst App = () => {\n  return (\n    <MainTheme>\n      <Router>\n        <Nav />\n        <div className=\"App container-fluid\">\n          <Switch>\n            <Route\n              path=\"/portfolio\"\n              exact\n              render={(props) => (\n                <LandingPage\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/portfolio/software\"\n              exact\n              render={(props) => (\n                <SoftwareExperiencePage\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/portfolio/hardware\"\n              exact\n              render={(props) => (\n                <HardwareExperiencePage\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/portfolio/other\"\n              exact\n              render={(props) => (\n                <OtherProjectsPage\n                  {...props}\n                />\n              )}\n            />\n          </Switch>      \n        </div>\n        <Footer />\n      </Router>\n    </MainTheme>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI Core\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n// Lab\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// Utils\r\nimport displayAddress from '../utilities/displayAddress';\r\nimport { capitalize } from '../utilities/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    '& button.MuiIconButton-root': {\r\n      paddingLeft: theme.spacing(0),\r\n    },\r\n  },\r\n  top: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  deets: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  deetHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'baseline',\r\n  },\r\n  subheader: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(4),\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: '0px 2px 6px #FFF',\r\n  },\r\n  topMobile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst ProductPage = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [expandTL, setExpandTL] = useState('');\r\n  const propInfo = history?.location?.state?.activeProperty;\r\n  /**\r\n   * Mobile? maxWidth: 415px\r\n   * @type {boolean} - is the current viewpoint mobile?\r\n   */\r\n  const mobile = useMediaQuery('(max-width:415px)');\r\n  /**\r\n   * Handle Expanding Timeline Accordions\r\n   * @param {int} panel panel index\r\n   * @fires setExpandTL to new panel or close\r\n   */\r\n  const handleExpandTL = (panel) => (e, newE) => setExpandTL(newE ? panel : false);\r\n  // console.log('prop info', propInfo);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"h2\" style={{ margin: 'auto' }}>\r\n          {displayAddress(history?.location?.state?.activeProperty?.propertyInfo?.address)}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={\r\n          mobile ? classes.mobileTop : classes.top\r\n        }>\r\n          <div className={classes.imgs}>\r\n            {/* TODO: img file paths: meh good enough for now */}\r\n            {propInfo?.images ? (\r\n              <>\r\n                <img\r\n                  src={`${process.env.REACT_APP_URL_BASE}/${propInfo?.images?.[0]?.path}`}\r\n                  alt={`${displayAddress(\r\n                    propInfo?.propertyInfo.address\r\n                  )}-pics`}\r\n                />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.deets}>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Property Info</b>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'primary' : 'secondary'\r\n                      }\r\n                      label={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'Occupied' : 'Vacant'}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Occupancy</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.vacant}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bath</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bath}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bedroom(s)</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bedrooms}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Type</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.propertyType}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Sqft</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.sqft}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Year Built</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.yearBuilt}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div className={classes.numbers}>\r\n          <h4 className={classes.subheader}>Quick Numbers</h4>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell noWrap>\r\n                  <b>Token Info</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={propInfo?.status}\r\n                    color={propInfo?.status !== 'sold out'\r\n                      ? 'primary' : 'secondary'}\r\n                  />\r\n                </TableCell>\r\n                <TableCell colSpan={2}>\r\n                  <b>Investment Info</b>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Sold\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total Investment\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.investmentInfo.totalInvestment}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Available\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalAvailable\r\n                    - propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  $ / Token\r\n                </TableCell>\r\n                <TableCell>\r\n                  {`$${+(propInfo.investmentInfo.totalInvestment\r\n                    / propInfo.investmentInfo.totalTokens).toFixed(2)}`}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>Project Timeline</h4>\r\n          <Timeline>\r\n            {Array.isArray(propInfo?.projectTimeline) ? (\r\n              propInfo.projectTimeline?.sort((a, b) => \r\n                new Date(a.date) < new Date(b.date)\r\n              )?.map((tl, i) => (\r\n                <TimelineItem>\r\n                  <TimelineOppositeContent style={{ marginTop: '12px' }}>\r\n                    {tl?.date}\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator style={{ marginTop: '12px' }}>\r\n                    <TimelineDot\r\n                      color={i === 0\r\n                        ? 'secondary' : 'primary'}\r\n                    />\r\n                    {i !== propInfo.projectTimeline.length - 1\r\n                      ? <TimelineConnector /> : null}\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>\r\n                    <Accordion\r\n                      square\r\n                      expanded={expandTL === i}\r\n                      onChange={handleExpandTL(i)}\r\n                    >\r\n                      <AccordionSummary>\r\n                        <b>{tl?.title}</b>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {tl?.description}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))\r\n            ) : null}\r\n          </Timeline>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>More Numbers</h4>\r\n          <Table size=\"small\">\r\n            {propInfo?.financialInfo ? (\r\n              Object.keys(propInfo.financialInfo).map((f, i) => (\r\n                <TableRow>\r\n                  {i % 2 === 0 ? (\r\n                    <>\r\n                      <TableCell>\r\n                        {capitalize(Object.keys(propInfo.financialInfo)[i + 1])}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[Object.keys(propInfo.financialInfo)[i + 1]]}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {capitalize(f)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[f]}\r\n                      </TableCell>\r\n                    </>\r\n                  ) : null}\r\n                </TableRow>\r\n              ))\r\n            ) : null}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}