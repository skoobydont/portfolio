{"version":3,"sources":["components/Theme.jsx","components/NavComponent.jsx","components/FooterComponent.jsx","pages/LandingPage.jsx","utilities/displayAddress.js","utilities/formatUtil.js","pages/ProductPage.jsx","pages/ProfilePage.jsx","pages/AccountPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainTheme","children","darkMode","useMediaQuery","theme","createTheme","palette","type","ThemeProvider","CssBaseline","useStyles","makeStyles","bar","display","flexDirection","justifyContent","paddingLeft","spacing","paddingRight","Nav","classes","history","useHistory","useState","anchorEl","Boolean","AppBar","position","className","IconButton","edge","color","onClick","push","root","icon","maxWidth","marginBottom","marginLeft","Footer","BottomNavigation","BottomNavigationAction","replace","paddingTop","margin","LandingPage","displayAddress","address","Object","keys","result","map","addr","i","length","capitalize","s","substring","toUpperCase","header","alignItems","top","deets","deetHeader","subheader","width","backgroundColor","primary","main","padding","marginTop","borderRadius","boxShadow","topMobile","ProductPage","expandTL","setExpandTL","propInfo","location","state","activeProperty","mobile","goBack","Typography","variant","component","style","propertyInfo","body","mobileTop","imgs","images","src","process","path","alt","Table","size","TableHead","TableRow","TableCell","Chip","vacant","label","TableBody","bath","bedrooms","propertyType","sqft","yearBuilt","numbers","noWrap","status","colSpan","tokenInfo","totalSold","investmentInfo","totalInvestment","totalAvailable","totalTokens","toFixed","Timeline","Array","isArray","projectTimeline","sort","a","b","Date","date","tl","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Accordion","square","expanded","onChange","panel","e","newE","AccordionSummary","title","AccordionDetails","description","financialInfo","f","ProfilePage","props","account","balance","fundAmount","connectWallet","fundWallet","refresh","current","target","value","AccountPage","App","useRef","setRefresh","reach","faucet","getBalance","getAccount","rawBalance","exact","render","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c42035.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nconst MainTheme = ({ children }) => {\r\n  const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  \r\n  const theme = createTheme({\r\n    palette: {\r\n      type: darkMode ? 'dark' : 'light',\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n);\r\n}\r\n\r\nexport default MainTheme;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  // css\r\n  const classes = useStyles();\r\n  // to redirect\r\n  const history = useHistory();\r\n  // menu item anchor element state\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  // handlers\r\n  const handleMenu = (e) => setAnchorEl(e.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n  // redirect handlers\r\n  const handleHomeRedirect = () => history.push('/portfolio');\r\n  const handleProfileRedirect = () => history.replace('/profile');\r\n  const handleAccountRedirect = () => history.replace('/account');\r\n  return (\r\n    <AppBar position=\"static\" className={classes.bar}>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"home\"\r\n        onClick={handleHomeRedirect}\r\n      >\r\n        <HomeIcon />\r\n      </IconButton>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'start',\r\n  },\r\n  icon: {\r\n    maxWidth: theme.spacing(5),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(-1),\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleHomeRedirect = () => history?.replace('/reach_for_algo');\r\n  return (\r\n    <BottomNavigation className={classes.root}>\r\n      <BottomNavigationAction\r\n        icon={<HomeIcon />}\r\n        className={classes.icon}\r\n        onClick={handleHomeRedirect}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: '8px',\r\n    justifyContent: 'center',\r\n    '& .MuiInputBase-root': {\r\n      margin: 'auto',\r\n      maxWidth: theme.spacing(35),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default LandingPage;\r\n","/**\r\n * Display Address\r\n * @param {object} address \r\n * @returns {string} formatted address string based on passed obj\r\n */\r\nconst displayAddress = (address) => {\r\n  if (!address) return '';\r\n  if (Object?.keys(address) < 1) return address;\r\n  let result = '';\r\n  Object.keys(address).map((addr, i) => (\r\n    result += `${\r\n      address[addr]?.length > 0\r\n        ? i > 0\r\n          ? `, ${address[addr]}`\r\n          : `${address[addr]}`\r\n        : ''\r\n    }`\r\n  ));\r\n  return result;\r\n}\r\n\r\nexport default displayAddress;\r\n","export const commaFormat = (n) => {\r\n  if (!n) return n;\r\n  // TODO: comma\r\n  return 'comma';\r\n}\r\n/**\r\n * Capitalize\r\n * @param {string} s some camel case string probably\r\n * @returns {string} Capitalize Case String With Spaces\r\n */\r\nexport const capitalize = (s) => {\r\n  const upperCase = s.substring(0, 1).toUpperCase() + s.substring(1);\r\n  const reg = /([A-Z])/g;\r\n  return upperCase.replace(reg, ' $1');\r\n}\r\n\r\nexport const dollarFormat = (n) => `$${n}`;\r\n\r\nexport default dollarFormat;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n// MUI Core\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n// Lab\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// Utils\r\nimport displayAddress from '../utilities/displayAddress';\r\nimport { capitalize } from '../utilities/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    '& button.MuiIconButton-root': {\r\n      paddingLeft: theme.spacing(0),\r\n    },\r\n  },\r\n  top: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  deets: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  deetHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'baseline',\r\n  },\r\n  subheader: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(4),\r\n    borderRadius: theme.spacing(1),\r\n    boxShadow: '0px 2px 6px #FFF',\r\n  },\r\n  topMobile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst ProductPage = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [expandTL, setExpandTL] = useState('');\r\n  const propInfo = history?.location?.state?.activeProperty;\r\n  /**\r\n   * Mobile? maxWidth: 415px\r\n   * @type {boolean} - is the current viewpoint mobile?\r\n   */\r\n  const mobile = useMediaQuery('(max-width:415px)');\r\n  /**\r\n   * Handle Expanding Timeline Accordions\r\n   * @param {int} panel panel index\r\n   * @fires setExpandTL to new panel or close\r\n   */\r\n  const handleExpandTL = (panel) => (e, newE) => setExpandTL(newE ? panel : false);\r\n  // console.log('prop info', propInfo);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"h2\" style={{ margin: 'auto' }}>\r\n          {displayAddress(history?.location?.state?.activeProperty?.propertyInfo?.address)}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={\r\n          mobile ? classes.mobileTop : classes.top\r\n        }>\r\n          <div className={classes.imgs}>\r\n            {/* TODO: img file paths: meh good enough for now */}\r\n            {propInfo?.images ? (\r\n              <>\r\n                <img\r\n                  src={`${process.env.REACT_APP_URL_BASE}/${propInfo?.images?.[0]?.path}`}\r\n                  alt={`${displayAddress(\r\n                    propInfo?.propertyInfo.address\r\n                  )}-pics`}\r\n                />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.deets}>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Property Info</b>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'primary' : 'secondary'\r\n                      }\r\n                      label={\r\n                        propInfo?.propertyInfo.vacant === 'occupied'\r\n                          ? 'Occupied' : 'Vacant'}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Occupancy</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.vacant}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bath</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bath}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Bedroom(s)</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.bedrooms}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Type</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.propertyType}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Sqft</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.sqft}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Year Built</b>\r\n                  </TableCell>\r\n                  <TableCell>{propInfo?.propertyInfo.yearBuilt}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <div className={classes.numbers}>\r\n          <h4 className={classes.subheader}>Quick Numbers</h4>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell noWrap>\r\n                  <b>Token Info</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={propInfo?.status}\r\n                    color={propInfo?.status !== 'sold out'\r\n                      ? 'primary' : 'secondary'}\r\n                  />\r\n                </TableCell>\r\n                <TableCell colSpan={2}>\r\n                  <b>Investment Info</b>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Sold\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total Investment\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.investmentInfo.totalInvestment}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>\r\n                  # Available\r\n                </TableCell>\r\n                <TableCell>\r\n                  {propInfo.tokenInfo.totalAvailable\r\n                    - propInfo.tokenInfo.totalSold}\r\n                </TableCell>\r\n                <TableCell>\r\n                  $ / Token\r\n                </TableCell>\r\n                <TableCell>\r\n                  {`$${+(propInfo.investmentInfo.totalInvestment\r\n                    / propInfo.investmentInfo.totalTokens).toFixed(2)}`}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>Project Timeline</h4>\r\n          <Timeline>\r\n            {Array.isArray(propInfo?.projectTimeline) ? (\r\n              propInfo.projectTimeline?.sort((a, b) => \r\n                new Date(a.date) < new Date(b.date)\r\n              )?.map((tl, i) => (\r\n                <TimelineItem>\r\n                  <TimelineOppositeContent style={{ marginTop: '12px' }}>\r\n                    {tl?.date}\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator style={{ marginTop: '12px' }}>\r\n                    <TimelineDot\r\n                      color={i === 0\r\n                        ? 'secondary' : 'primary'}\r\n                    />\r\n                    {i !== propInfo.projectTimeline.length - 1\r\n                      ? <TimelineConnector /> : null}\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>\r\n                    <Accordion\r\n                      square\r\n                      expanded={expandTL === i}\r\n                      onChange={handleExpandTL(i)}\r\n                    >\r\n                      <AccordionSummary>\r\n                        <b>{tl?.title}</b>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {tl?.description}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))\r\n            ) : null}\r\n          </Timeline>\r\n        </div>\r\n        <div>\r\n          <h4 className={classes.subheader}>More Numbers</h4>\r\n          <Table size=\"small\">\r\n            {propInfo?.financialInfo ? (\r\n              Object.keys(propInfo.financialInfo).map((f, i) => (\r\n                <TableRow>\r\n                  {i % 2 === 0 ? (\r\n                    <>\r\n                      <TableCell>\r\n                        {capitalize(Object.keys(propInfo.financialInfo)[i + 1])}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[Object.keys(propInfo.financialInfo)[i + 1]]}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {capitalize(f)}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {propInfo.financialInfo[f]}\r\n                      </TableCell>\r\n                    </>\r\n                  ) : null}\r\n                </TableRow>\r\n              ))\r\n            ) : null}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","\r\nconst ProfilePage = (props) => {\r\n  const {\r\n    account,\r\n    balance,\r\n    fundAmount,\r\n    connectWallet,\r\n    fundWallet,\r\n    refresh,\r\n  } = props;\r\n\r\n  \r\n  // console.log('pfol page props', props);\r\n  return (\r\n    <div>\r\n      {refresh ? <div>Loading</div> : (\r\n        <>\r\n          {account?.current ? (\r\n            <>\r\n              {balance?.current !== null\r\n                ? <div>Current Balance: {`${balance.current}`}</div>\r\n                : null}\r\n              <br />\r\n              <input title=\"Fund Amount\" onChange={e => fundAmount.current = e.target.value} />\r\n              <button onClick={fundWallet}>fund wallet</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div>No Wallet Connected</div>\r\n              <button onClick={connectWallet}>connect wallet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","const AccountPage = () => {\r\n  return (\r\n    <div>Account Page</div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n","import React, { useRef, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport * as reach from '@reach-sh/stdlib/ALGO';\n\nimport './App.css';\nimport MainTheme from './components/Theme';\nimport Nav from './components/NavComponent';\nimport Footer from './components/FooterComponent';\nimport LandingPage from './pages/LandingPage';\nimport ProductPage from './pages/ProductPage';\nimport ProfilePage from './pages/ProfilePage';\nimport AccountPage from './pages/AccountPage';\n\nconst App = () => {\n  \n  const account = useRef();\n  const balance = useRef();\n  const fundAmount = useRef();\n  const [refresh, setRefresh] = useState(false);\n  // helpers\n  /**\n   * Fund Wallet With TestNet Algo\n   * @async\n   * @fires setRefresh\n   */\n   const fundWallet = async () => {\n    setRefresh(true);\n    const faucet = await reach.getFaucet();\n    await reach.transfer(\n      faucet,\n      account.current,\n      reach.parseCurrency(fundAmount.current),\n    );\n    await getBalance();\n    setRefresh(false);\n  }\n  /**\n   * Get Account\n   * @async\n   * @returns {Promise} set current account to result of reach.getDefaultAccount()\n   */\n  const getAccount = async () => account.current = await reach.getDefaultAccount();\n  const getBalance = async () => {\n    /**\n     * balanceOf returns in microalgos\n     */\n    const rawBalance = await reach.balanceOf(account.current);\n    /**\n     * format microalgos to Algos & assign to current balance\n     */\n    balance.current = reach.formatCurrency(rawBalance, 4);\n  }\n  /**\n   * Connect to Wallet\n   * @async\n   * @fires getAccount\n   * @fires getBalance\n   * @fires setRefresh\n   */\n  const connectWallet = async () => {\n    await getAccount();\n    setRefresh(true);\n    await getBalance();\n    setRefresh(false);\n  }\n\n  return (\n    <MainTheme>\n      <Router>\n        <Nav />\n        <div className=\"App container-fluid\">\n          <Switch>\n            <Route\n              path=\"/profile\"\n              exact\n              render={(props) => (\n                <ProfilePage\n                  {...props}\n                  account={account}\n                  balance={balance}\n                  fundAmount={fundAmount}\n                  connectWallet={connectWallet}\n                  fundWallet={fundWallet}\n                  refresh={refresh}\n                />\n              )}\n            />\n            <Route\n              path=\"/account\"\n              exact\n              render={(props) => (\n                <AccountPage\n                  {...props}\n                  user={account}\n                />\n              )}\n            />\n            <Route\n              path=\"/property/:id\"\n              exact\n              render={(props) => (\n                <ProductPage\n                  {...props}\n                  user={account}\n                />\n              )}\n            />\n            <Route\n              path=\"/reach_for_algo\"\n              exact\n              render={(props) => (\n                <LandingPage\n                  {...props}\n                  user={account}\n                />\n              )}\n            />\n          </Switch>      \n        </div>\n        <Footer />\n      </Router>\n    </MainTheme>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}